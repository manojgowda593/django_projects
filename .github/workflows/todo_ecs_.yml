name: todo cicd

on:
    push:
        branches:
            - cicd-test
        # paths:
        #     - 'todo/**'

jobs:
    build-scan-push_CI:
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v3

            - name: docker login
              run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

            - name: docker build
              run: | 
                docker build \
                -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }} \
                todo/.
                echo "✅✅Docker image built ✅✅"

            - name: Scan Docker image using Trivy 
              uses: aquasecurity/trivy-action@master
              with:
                image-ref: '${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}'
                format: 'table'
                exit-code: '0'       
                severity: 'CRITICAL,HIGH'
              continue-on-error: true

            - name: docker push 
              run: | 
                docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ github.sha }}
                echo "✅✅Docker image pushed ✅✅"

    deploy:
      runs-on: ubuntu-latest
      needs: build-scan-push_CI
      steps: 
        - name: checkout code
          uses: actions/checkout@v3

        - name: aws configuration
          uses: aws-actions/configure-aws-credentials@v4


          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-south-1

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.5.7


        - name: Terraform infra creation 
          run: | 
            cd todo/Terraform_ECS
            terraform init
            terraform plan \
              -var "docker_username=${{ secrets.DOCKER_USERNAME }}" \
              -var "image_name=${{ secrets.IMAGE_NAME }}" \
              -var "image_tag=${{ github.sha }}" \
              -var "db_username=${{ secrets.DB_USER }}" \
              -var "db_password=${{ secrets.DB_PASSWORD }}" \
              -var "db_db=${{ secrets.DB_NAME }}" \
              -out=tfplan
            terraform apply -auto-approve tfplan
            terraform destroy -auto-approve